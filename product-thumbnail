<!DOCTYPE html>
<html lang="id">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Product Gallery - RawatMobilku.id</title>
  <style>
    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }
    
    body {
      font-family: 'Poppins', sans-serif;
      background-color: #f5f5f5;
      padding: 20px;
    }
    
    .product-gallery {
      max-width: 800px;
      margin: 0 auto;
      background: white;
      border-radius: 8px;
      overflow: hidden;
      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }
    
    .main-display {
      position: relative;
      width: 100%;
      height: 500px;
      overflow: hidden;
      background: #eee;
    }
    
    .main-content {
      width: 100%;
      height: 100%;
      object-fit: cover;
      display: block;
    }
    
    /* Overlay text removed as requested */
    
    .thumbnails {
      display: flex;
      overflow-x: auto;
      gap: 5px;
      padding: 10px;
      background: #f8f8f8;
      position: relative;
    }
    
    .thumbnail {
      min-width: 100px;
      height: 100px;
      border: 2px solid transparent;
      cursor: pointer;
      position: relative;
      flex-shrink: 0;
      overflow: hidden;
    }
    
    .thumbnail.active {
      border-color: #e64747;
    }
    
    .thumbnail img, .thumbnail video {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
    
    .play-icon {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background: rgba(0,0,0,0.5);
      border-radius: 50%;
      width: 30px;
      height: 30px;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    
    .play-icon::after {
      content: '';
      width: 0;
      height: 0;
      border-style: solid;
      border-width: 5px 0 5px 10px;
      border-color: transparent transparent transparent white;
      margin-left: 2px;
    }
    
    .nav-arrow {
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      width: 40px;
      height: 40px;
      background: rgba(255,255,255,0.7);
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      z-index: 10;
      border: none;
      font-size: 24px;
      color: #333;
    }
    
    .prev {
      left: 10px;
    }
    
    .next {
      right: 10px;
    }

    @media (max-width: 600px) {
      .main-display {
        height: 400px;
      }
      
      .thumbnail {
        min-width: 80px;
        height: 80px;
      }
    }
  </style>
</head>
<body>
  <div class="product-gallery">
    <div class="main-display">
      <button class="nav-arrow prev">&#10094;</button>
      <button class="nav-arrow next">&#10095;</button>
      
      <!-- Main content (image or video) will be loaded here by JavaScript -->
      <div id="main-content-container"></div>
      
      <!-- Overlay text removed as requested -->
    </div>
    
    <div class="thumbnails" id="thumbnails-container">
      <!-- Thumbnails will be created by JavaScript -->
    </div>
  </div>

  <script>
    // Define the media items (replace with your actual product media)
    const mediaItems = [
      { 
        type: 'image', 
        thumbnail: '/api/placeholder/500/500', 
        main: '/api/placeholder/500/500', 
        alt: 'Car side view showing shine' 
      },
      { 
        type: 'video', 
        thumbnail: '/api/placeholder/500/500', 
        main: 'https://cdnjs.cloudflare.com/ajax/libs/Blotter/0.1.0/example-videos/ink.mp4', 
        alt: 'Product application demo' 
      },
      { 
        type: 'image', 
        thumbnail: '/api/placeholder/500/500', 
        main: '/api/placeholder/500/500', 
        alt: 'Product bottle' 
      },
      { 
        type: 'image', 
        thumbnail: '/api/placeholder/500/500', 
        main: '/api/placeholder/500/500', 
        alt: 'Car protection demonstration' 
      },
      { 
        type: 'image', 
        thumbnail: '/api/placeholder/500/500', 
        main: '/api/placeholder/500/500', 
        alt: 'Shiny effect on car' 
      }
    ];

    let currentIndex = 0;
    const mainContainer = document.getElementById('main-content-container');
    const thumbnailsContainer = document.getElementById('thumbnails-container');
    
    // Create thumbnails
    mediaItems.forEach((item, index) => {
      const thumbnail = document.createElement('div');
      thumbnail.className = `thumbnail ${index === 0 ? 'active' : ''}`;
      thumbnail.dataset.index = index;
      
      if (item.type === 'image') {
        const img = document.createElement('img');
        img.src = item.thumbnail;
        img.alt = item.alt;
        thumbnail.appendChild(img);
      } else if (item.type === 'video') {
        const img = document.createElement('img');
        img.src = item.thumbnail;
        img.alt = item.alt;
        thumbnail.appendChild(img);
        
        const playIcon = document.createElement('div');
        playIcon.className = 'play-icon';
        thumbnail.appendChild(playIcon);
      }
      
      thumbnail.addEventListener('click', () => {
        setActiveItem(index);
      });
      
      thumbnailsContainer.appendChild(thumbnail);
    });
    
    // Function to set active item
    function setActiveItem(index) {
      // Update current index
      currentIndex = index;
      
      // Update active thumbnail
      document.querySelectorAll('.thumbnail').forEach((thumb, i) => {
        thumb.className = `thumbnail ${i === index ? 'active' : ''}`;
      });
      
      // Clear main container
      mainContainer.innerHTML = '';
      
      // Load appropriate content based on type
      const item = mediaItems[index];
      
      if (item.type === 'image') {
        const img = document.createElement('img');
        img.src = item.main;
        img.alt = item.alt;
        img.className = 'main-content';
        mainContainer.appendChild(img);
      } else if (item.type === 'video') {
        const video = document.createElement('video');
        video.src = item.main;
        video.className = 'main-content';
        video.autoplay = true;
        video.loop = true;
        video.muted = true;
        video.playsInline = true;
        video.controls = false;
        video.alt = item.alt;
        mainContainer.appendChild(video);
        
        // Ensure video plays
        video.play().catch(error => {
          console.log('Autoplay prevented:', error);
          // Create play button as fallback if autoplay fails
          const playButton = document.createElement('button');
          playButton.innerHTML = '▶️ Play Video';
          playButton.style.position = 'absolute';
          playButton.style.top = '50%';
          playButton.style.left = '50%';
          playButton.style.transform = 'translate(-50%, -50%)';
          playButton.style.padding = '10px 20px';
          playButton.style.background = 'rgba(0,0,0,0.7)';
          playButton.style.color = 'white';
          playButton.style.border = 'none';
          playButton.style.borderRadius = '5px';
          playButton.style.cursor = 'pointer';
          
          playButton.addEventListener('click', () => {
            video.play();
            playButton.remove();
          });
          
          mainContainer.appendChild(playButton);
        });
      }
    }
    
    // Initialize with first item
    setActiveItem(0);
    
    // Navigation arrows
    document.querySelector('.prev').addEventListener('click', () => {
      const newIndex = (currentIndex - 1 + mediaItems.length) % mediaItems.length;
      setActiveItem(newIndex);
    });
    
    document.querySelector('.next').addEventListener('click', () => {
      const newIndex = (currentIndex + 1) % mediaItems.length;
      setActiveItem(newIndex);
    });

    // Add keyboard navigation
    document.addEventListener('keydown', (e) => {
      if (e.key === 'ArrowLeft') {
        const newIndex = (currentIndex - 1 + mediaItems.length) % mediaItems.length;
        setActiveItem(newIndex);
      } else if (e.key === 'ArrowRight') {
        const newIndex = (currentIndex + 1) % mediaItems.length;
        setActiveItem(newIndex);
      }
    });

    // Add swipe functionality for mobile
    let touchStartX = 0;
    let touchEndX = 0;
    
    const mainDisplay = document.querySelector('.main-display');
    
    mainDisplay.addEventListener('touchstart', (e) => {
      touchStartX = e.changedTouches[0].screenX;
    });
    
    mainDisplay.addEventListener('touchend', (e) => {
      touchEndX = e.changedTouches[0].screenX;
      handleSwipe();
    });
    
    function handleSwipe() {
      const threshold = 50; // Minimum distance required for a swipe
      
      if (touchEndX < touchStartX - threshold) {
        // Swipe left - go to next
        const newIndex = (currentIndex + 1) % mediaItems.length;
        setActiveItem(newIndex);
      }
      
      if (touchEndX > touchStartX + threshold) {
        // Swipe right - go to previous
        const newIndex = (currentIndex - 1 + mediaItems.length) % mediaItems.length;
        setActiveItem(newIndex);
      }
    }
  </script>
</body>
</html>
